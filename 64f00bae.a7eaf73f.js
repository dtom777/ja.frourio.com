(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{127:function(e,n,t){"use strict";t.d(n,"a",(function(){return f})),t.d(n,"b",(function(){return m}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=a.a.createContext({}),l=function(e){var n=a.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},f=function(e){var n=l(e.components);return a.a.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},d=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),f=l(t),d=r,m=f["".concat(c,".").concat(d)]||f[d]||u[d]||o;return t?a.a.createElement(m,i(i({ref:n},p),{},{components:t})):a.a.createElement(m,i({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,c=new Array(o);c[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var p=2;p<o;p++)c[p]=t[p];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},93:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return i})),t.d(n,"rightToc",(function(){return s})),t.d(n,"default",(function(){return l}));var r=t(3),a=t(7),o=(t(0),t(127)),c={id:"performance",title:"Performance"},i={unversionedId:"advanced/performance",id:"advanced/performance",isDocsHomePage:!1,title:"Performance",description:"When exporting the responseSchema from the controller, fast-json-stringify is enabled and JSON response becomes fast.",source:"@site/docs/advanced/performance.md",slug:"/advanced/performance",permalink:"/docs/advanced/performance",editUrl:"https://github.com/frouriojs/frourio.io/edit/master/docs/advanced/performance.md",version:"current",sidebar:"someSidebar",previous:{title:"CORS / Helmet",permalink:"/docs/advanced/cors-helmet"},next:{title:"Pathpida with Next.js",permalink:"/docs/pathpida/with-nextjs"}},s=[],p={rightToc:s};function l(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"When exporting the responseSchema from the controller, ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/fastify/fast-json-stringify"}),"fast-json-stringify")," is enabled and JSON response becomes fast."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts",metastring:'title="server/api/tasks/_taskId@number/controller.ts"',title:'"server/api/tasks/_taskId@number/controller.ts"'}),"import { defineResponseSchema, defineController } from './$relay'\nimport { findTask } from '$/service/tasks'\n\nexport const responseSchema = defineResponseSchema(() => ({\n  get: {\n    200: {\n      type: 'object',\n      properties: {\n        id: {\n          type: 'number'\n        },\n        label: {\n          type: 'string'\n        },\n        done: {\n          type: 'boolean'\n        }\n      }\n    }\n  }\n}))\n\nexport default defineController(() => ({\n  get: async ({ params }) => {\n    const task = await findTask(params.taskId)\n\n    return task ? { status: 200, body: task } : { status: 404 }\n  }\n}))\n")))}l.isMDXComponent=!0}}]);