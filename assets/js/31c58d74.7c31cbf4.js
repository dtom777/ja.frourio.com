"use strict";(self.webpackChunkfrourio_doc=self.webpackChunkfrourio_doc||[]).push([[6013],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return m}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),p=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(a),m=r,v=c["".concat(o,".").concat(m)]||c[m]||d[m]||i;return a?n.createElement(v,l(l({ref:t},u),{},{components:a})):n.createElement(v,l({ref:t},u))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=c;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},8215:function(e,t,a){var n=a(7294);t.Z=function(e){var t=e.children,a=e.hidden,r=e.className;return n.createElement("div",{role:"tabpanel",hidden:a,className:r},t)}},9877:function(e,t,a){a.d(t,{Z:function(){return u}});var n=a(3117),r=a(7294),i=a(2389),l=a(4726),s=a(6010),o="tabItem_LplD";function p(e){var t,a,i,p=e.lazy,u=e.block,d=e.defaultValue,c=e.values,m=e.groupId,v=e.className,f=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),k=null!=c?c:f.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),h=(0,l.lx)(k,(function(e,t){return e.value===t.value}));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===d?d:null!=(t=null!=d?d:null==(a=f.find((function(e){return e.props.default})))?void 0:a.props.value)?t:null==(i=f[0])?void 0:i.props.value;if(null!==y&&!k.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+k.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var g=(0,l.UB)(),b=g.tabGroupChoices,N=g.setTabGroupChoices,x=(0,r.useState)(y),T=x[0],w=x[1],C=[],P=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var O=b[m];null!=O&&O!==T&&k.some((function(e){return e.value===O}))&&w(O)}var E=function(e){var t=e.currentTarget,a=C.indexOf(t),n=k[a].value;n!==T&&(P(t),w(n),null!=m&&N(m,n))},q=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n=C.indexOf(e.currentTarget)+1;a=C[n]||C[0];break;case"ArrowLeft":var r=C.indexOf(e.currentTarget)-1;a=C[r]||C[C.length-1]}null==(t=a)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":u},v)},k.map((function(e){var t=e.value,a=e.label,i=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:function(e){return C.push(e)},onKeyDown:q,onFocus:E,onClick:E},i,{className:(0,s.Z)("tabs__item",o,null==i?void 0:i.className,{"tabs__item--active":T===t})}),null!=a?a:t)}))),p?(0,r.cloneElement)(f.filter((function(e){return e.props.value===T}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},f.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==T})}))))}function u(e){var t=(0,i.Z)();return r.createElement(p,(0,n.Z)({key:String(t)},e))}},1484:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return p},contentTitle:function(){return u},metadata:function(){return d},toc:function(){return c},default:function(){return v}});var n=a(3117),r=a(102),i=(a(7294),a(3905)),l=a(9877),s=a(8215),o=["components"],p={id:"validation",title:"Validation"},u=void 0,d={unversionedId:"reference/validation",id:"reference/validation",title:"Validation",description:"The examples on this page are written with Fastify, but the same features are valid with Express.",source:"@site/docs/reference/validation.mdx",sourceDirName:"reference",slug:"/reference/validation",permalink:"/docs/reference/validation",editUrl:"https://github.com/frouriojs/frourio.com/edit/master/docs/reference/validation.mdx",tags:[],version:"current",frontMatter:{id:"validation",title:"Validation"},sidebar:"docs",previous:{title:"AdditionalRequest",permalink:"/docs/reference/additionalRequest"},next:{title:"Command Line Interface",permalink:"/docs/reference/cli"}},c=[{value:"Path Parameter",id:"path-parameter",children:[],level:2},{value:"URL Query",id:"url-query",children:[],level:2},{value:"Request body",id:"request-body",children:[],level:2},{value:"class-validator",id:"class-validator",children:[{value:"Passing Validator Options",id:"passing-validator-options",children:[],level:3}],level:2}],m={toc:c};function v(e){var t=e.components,a=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The examples on this page are written with Fastify, but the same features are valid with Express."),(0,i.kt)("p",{parentName:"div"},"Pull requests to add examples with Express are welcome!"))),(0,i.kt)("hr",null),(0,i.kt)("p",null,"There are two types of validation: automatic validation by Frourio and validation using the class-validator."),(0,i.kt)("h2",{id:"path-parameter"},"Path Parameter"),(0,i.kt)("p",null,"The type can be specified by appending ",(0,i.kt)("inlineCode",{parentName:"p"},"@string")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"@number")," to path parameters, and the default in frourio is ",(0,i.kt)("inlineCode",{parentName:"p"},"string"),"."),(0,i.kt)("p",null,"When the type is specified as ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),", frourio automatically converts string to number and validates that it is not NaN."),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},(0,i.kt)("strong",{parentName:"p"},"When the type is not specified, there is a difference")," in the behavior of Frourio and Aspida."),(0,i.kt)("p",{parentName:"div"},"Frourio interprets the type as ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," as mentioned above, but Aspida interprets it as ",(0,i.kt)("inlineCode",{parentName:"p"},"string | number"),".\nThis is due to the information loss that occurs as path parameters are passed through an URL."),(0,i.kt)("p",{parentName:"div"},"Unless there are special circumstances, ",(0,i.kt)("strong",{parentName:"p"},"you should specify their types"),"."))),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Example"),(0,i.kt)("h3",null,"API Definition"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="server/api/tasks/_taskId@number/index.ts"',title:'"server/api/tasks/_taskId@number/index.ts"'},"import { Task } from '$/types'\n\nexport type Methods = {\n  get: {\n    resBody: Task\n  }\n}\n")),(0,i.kt)("h3",null,"Controller"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="server/api/tasks/_taskId@number/controller.ts"',title:'"server/api/tasks/_taskId@number/controller.ts"'},"import { defineController } from './$relay'\nimport { findTask } from '$/service/tasks'\n\nexport default defineController(() => ({\n  get: async ({ params }) => {\n    const task = await findTask(params.taskId)\n\n    return task ? { status: 200, body: task } : { status: 404 }\n  },\n}))\n")),(0,i.kt)("h3",null,"Results"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'$ curl http://localhost:8080/api/tasks\n[{"id":0,"label":"sample task","done":false}]\n\n$ curl http://localhost:8080/api/tasks/0\n{"id":0,"label":"sample task","done":false}\n\n$ curl http://localhost:8080/api/tasks/1 -i\nHTTP/1.1 404 Not Found\n\n$ curl http://localhost:8080/api/tasks/abc -i\nHTTP/1.1 400 Bad Request\n'))),(0,i.kt)("h2",{id:"url-query"},"URL Query"),(0,i.kt)("p",null,"When the URL query specified as ..."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"required",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Frourio automatically validates that it exists."),(0,i.kt)("li",{parentName:"ul"},"If it isn't and it is specified as array, frourio sets an empty array ",(0,i.kt)("inlineCode",{parentName:"li"},"[]"),"."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"number"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Frourio automatically converts string to number and validates that it is not NaN."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"boolean"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Frourio automatically converts string (",(0,i.kt)("inlineCode",{parentName:"li"},"'true'")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"'false'"),") to boolean.")))),(0,i.kt)("span",{class:"badge badge--secondary"},"Depricated"),(0,i.kt)("p",null,"And if its key ends in square brackets (e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"foo[]"),"), frourio automatically removes the brackets (e.g.\n",(0,i.kt)("inlineCode",{parentName:"p"},"foo"),")."),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Example"),(0,i.kt)("h3",null,"API Definition"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="server/api/tasks/index.ts"',title:'"server/api/tasks/index.ts"'},"import { Task } from '$/types'\n\nexport type Methods = {\n  get: {\n    query?: {\n      limit: number\n    }\n    resBody: Task[]\n  }\n}\n")),(0,i.kt)("h3",null,"Controller"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="server/api/tasks/controller.ts"',title:'"server/api/tasks/controller.ts"'},"import { defineController } from './$relay'\nimport { getTasks } from '$/service/tasks'\n\nexport default defineController(() => ({\n  get: async ({ query }) => ({\n    status: 200,\n    body: (await getTasks()).slice(0, query?.limit),\n  }),\n}))\n")),(0,i.kt)("h3",null,"Results"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'$ curl http://localhost:8080/api/tasks\n[{"id":0,"label":"sample task 0","done":false},{"id":1,"label":"sample task 1","done":false},{"id":1,"label":"sample task 2","done":false}]\n\n$ curl http://localhost:8080/api/tasks?limit=1\n[{"id":0,"label":"sample task 0","done":false}]\n\n$ curl http://localhost:8080/api/tasks?limit=abc -i\nHTTP/1.1 400 Bad Request\n'))),(0,i.kt)("h2",{id:"request-body"},"Request body"),(0,i.kt)("p",null,"When the ",(0,i.kt)("inlineCode",{parentName:"p"},"reqFormat")," is specified as ",(0,i.kt)("inlineCode",{parentName:"p"},"FormData"),", frourio automatically converts and validates it."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"If it is array, converts it to array (and if it doesn't exists, set an empty array)."),(0,i.kt)("li",{parentName:"ol"},"Extracts file or value."),(0,i.kt)("li",{parentName:"ol"},"If some values are specified as optional and they are empty, remove them.")),(0,i.kt)("h2",{id:"class-validator"},"class-validator"),(0,i.kt)("p",null,"To validate request body, request headers and URL query, specify a class with ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/typestack/class-validator"},"class-validator")," instead of type for reqBody, reqHeaders and query."),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Example"),(0,i.kt)("h3",null,"Validator"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="server/validators/index.ts"',title:'"server/validators/index.ts"'},"import { MinLength, IsString } from 'class-validator'\n\nexport class LoginBody {\n  @MinLength(5)\n  id: string\n\n  @MinLength(8)\n  pass: string\n}\n\nexport class TokenHeader {\n  @IsString()\n  @MinLength(10)\n  token: string\n}\n")),(0,i.kt)("h3",null,"API Definition"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="server/api/token/index.ts"',title:'"server/api/token/index.ts"'},"import { LoginBody, TokenHeader } from '$/validators'\n\nexport type Methods = {\n  post: {\n    reqBody: LoginBody\n    resBody: {\n      token: string\n    }\n  }\n\n  delete: {\n    reqHeaders: TokenHeader\n  }\n}\n")),(0,i.kt)("h3",null,"Results"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'$ curl -X POST -H "Content-Type: application/json" -d \'{"id":"correctId","pass":"correctPass"}\' http://localhost:8080/api/token\n{"token":"XXXXXXXXXX"}\n\n$ curl -X POST -H "Content-Type: application/json" -d \'{"id":"abc","pass":"12345"}\' http://localhost:8080/api/token -i\nHTTP/1.1 400 Bad Request\n\n$ curl -X POST -H "Content-Type: application/json" -d \'{"id":"incorrectId","pass":"incorrectPass"}\' http://localhost:8080/api/token -i\nHTTP/1.1 401 Unauthorized\n'))),(0,i.kt)("h3",{id:"passing-validator-options"},"Passing Validator Options"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/typestack/class-validator#passing-options"},"class-validator options")),(0,i.kt)(l.Z,{defaultValue:"fastify",values:[{label:"Fastify",value:"fastify"},{label:"Express",value:"express"}],mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"fastify",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="server/service/app.ts"',title:'"server/service/app.ts"'},"import Fastify, { FastifyServerFactory } from 'fastify'\nimport server from '$/$server'\n\nexport const init = (serverFactory?: FastifyServerFactory) => {\n  const app = Fastify({ serverFactory })\n  server(app, { basePath: '/api', validator: { whitelist: true } })\n  return app\n}\n"))),(0,i.kt)(s.Z,{value:"express",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="server/service/app.ts"',title:'"server/service/app.ts"'},"import express from 'express'\nimport server from '$/$server'\n\nexport const init = () => {\n  const app = express()\n  server(app, { basePath: '/api', validator: { whitelist: true } })\n  return app\n}\n")))))}v.isMDXComponent=!0}}]);