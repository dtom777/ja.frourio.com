"use strict";(self.webpackChunkfrourio_doc=self.webpackChunkfrourio_doc||[]).push([[9619],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},f="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),f=p(n),m=o,d=f["".concat(s,".").concat(m)]||f[m]||l[m]||a;return n?r.createElement(d,i(i({ref:t},u),{},{components:n})):r.createElement(d,i({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[f]="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7869:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return f}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],c={id:"performance",title:"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u6539\u5584"},s=void 0,p={unversionedId:"guide/performance",id:"guide/performance",title:"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u6539\u5584",description:"\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u304b\u3089 responseSchema \u3092 export \u3059\u308b\u3068\u3001fast-json-stringify \u304c\u6709\u52b9\u306b\u306a\u308a JSON \u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u9ad8\u901f\u306b\u306a\u308a\u307e\u3059\u3002",source:"@site/docs/guide/performance.md",sourceDirName:"guide",slug:"/guide/performance",permalink:"/docs/guide/performance",draft:!1,editUrl:"https://github.com/frouriojs/ja.frourio.com/edit/master/docs/guide/performance.md",tags:[],version:"current",frontMatter:{id:"performance",title:"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u6539\u5584"}},u={},f=[],l={toc:f};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u304b\u3089 ",(0,a.kt)("inlineCode",{parentName:"p"},"responseSchema")," \u3092 export \u3059\u308b\u3068\u3001",(0,a.kt)("a",{parentName:"p",href:"https://github.com/fastify/fast-json-stringify"},"fast-json-stringify")," \u304c\u6709\u52b9\u306b\u306a\u308a JSON \u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u9ad8\u901f\u306b\u306a\u308a\u307e\u3059\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="server/api/tasks/_taskId@number/controller.ts"',title:'"server/api/tasks/_taskId@number/controller.ts"'},"import { defineResponseSchema, defineController } from './$relay';\nimport { findTask } from '$/service/tasks';\n\nexport const responseSchema = defineResponseSchema(() => ({\n  get: {\n    200: {\n      type: 'object',\n      properties: {\n        id: {\n          type: 'number',\n        },\n        label: {\n          type: 'string',\n        },\n        done: {\n          type: 'boolean',\n        },\n      },\n    },\n  },\n}));\n\nexport default defineController(() => ({\n  get: async ({ params }) => {\n    const task = await findTask(params.taskId);\n\n    return task ? { status: 200, body: task } : { status: 404 };\n  },\n}));\n")))}m.isMDXComponent=!0}}]);