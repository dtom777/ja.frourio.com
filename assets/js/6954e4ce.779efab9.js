"use strict";(self.webpackChunkfrourio_doc=self.webpackChunkfrourio_doc||[]).push([[8477],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(r),m=a,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return r?n.createElement(f,i(i({ref:t},c),{},{components:r})):n.createElement(f,i({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9945:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var n=r(3117),a=r(102),o=(r(7294),r(3905)),i=["components"],l={id:"url-query",title:"URL query"},s=void 0,u={unversionedId:"validation/url-query",id:"validation/url-query",title:"URL query",description:"Properties of number number[] boolean boolean[] are automatically validated.",source:"@site/docs/validation/url-query.md",sourceDirName:"validation",slug:"/validation/url-query",permalink:"/docs/validation/url-query",editUrl:"https://github.com/frouriojs/frourio.com/edit/master/docs/validation/url-query.md",tags:[],version:"current",frontMatter:{id:"url-query",title:"URL query"},sidebar:"someSidebar",previous:{title:"Path parameter",permalink:"/docs/validation/path-parameter"},next:{title:"JSON body",permalink:"/docs/validation/json-body"}},c=[],p={toc:c};function d(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Properties of ",(0,o.kt)("inlineCode",{parentName:"p"},"number")," ",(0,o.kt)("inlineCode",{parentName:"p"},"number[]")," ",(0,o.kt)("inlineCode",{parentName:"p"},"boolean")," ",(0,o.kt)("inlineCode",{parentName:"p"},"boolean[]")," are automatically validated."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="server/api/tasks/index.ts"',title:'"server/api/tasks/index.ts"'},"import { Task } from '$/types'\n\nexport type Methods = {\n  get: {\n    query?: {\n      limit: number\n    }\n    resBody: Task[]\n  }\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="server/api/tasks/controller.ts"',title:'"server/api/tasks/controller.ts"'},"import { defineController } from './$relay'\nimport { getTasks } from '$/service/tasks'\n\nexport default defineController(() => ({\n  get: async ({ query }) => ({\n    status: 200,\n    body: (await getTasks()).slice(0, query?.limit)\n  })\n}))\n")),(0,o.kt)("p",null,"Results"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},'$ curl http://localhost:8080/api/tasks\n[{"id":0,"label":"sample task 0","done":false},{"id":1,"label":"sample task 1","done":false},{"id":1,"label":"sample task 2","done":false}]\n\n$ curl http://localhost:8080/api/tasks?limit=1\n[{"id":0,"label":"sample task 0","done":false}]\n\n$ curl http://localhost:8080/api/tasks?limit=abc -i\nHTTP/1.1 400 Bad Request\n')))}d.isMDXComponent=!0}}]);