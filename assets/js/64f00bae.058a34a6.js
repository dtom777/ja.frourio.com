"use strict";(self.webpackChunkfrourio_doc=self.webpackChunkfrourio_doc||[]).push([[5680],{3905:function(e,n,t){t.d(n,{Zo:function(){return f},kt:function(){return d}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},f=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,f=i(e,["components","mdxType","originalType","parentName"]),u=p(t),d=o,m=u["".concat(s,".").concat(d)]||u[d]||l[d]||a;return t?r.createElement(m,c(c({ref:n},f),{},{components:t})):r.createElement(m,c({ref:n},f))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,c=new Array(a);c[0]=u;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var p=2;p<a;p++)c[p]=t[p];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},4415:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return f},default:function(){return u}});var r=t(3117),o=t(102),a=(t(7294),t(3905)),c=["components"],i={id:"performance",title:"Performance"},s=void 0,p={unversionedId:"advanced/performance",id:"advanced/performance",title:"Performance",description:"When exporting the responseSchema from the controller, fast-json-stringify is enabled and JSON response becomes fast.",source:"@site/docs/advanced/performance.md",sourceDirName:"advanced",slug:"/advanced/performance",permalink:"/docs/advanced/performance",editUrl:"https://github.com/frouriojs/frourio.io/edit/master/docs/advanced/performance.md",tags:[],version:"current",frontMatter:{id:"performance",title:"Performance"},sidebar:"someSidebar",previous:{title:"CORS / Helmet",permalink:"/docs/advanced/cors-helmet"},next:{title:"Pathpida with Next.js",permalink:"/docs/pathpida/with-nextjs"}},f=[],l={toc:f};function u(e){var n=e.components,t=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"When exporting the responseSchema from the controller, ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/fastify/fast-json-stringify"},"fast-json-stringify")," is enabled and JSON response becomes fast."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="server/api/tasks/_taskId@number/controller.ts"',title:'"server/api/tasks/_taskId@number/controller.ts"'},"import { defineResponseSchema, defineController } from './$relay'\nimport { findTask } from '$/service/tasks'\n\nexport const responseSchema = defineResponseSchema(() => ({\n  get: {\n    200: {\n      type: 'object',\n      properties: {\n        id: {\n          type: 'number'\n        },\n        label: {\n          type: 'string'\n        },\n        done: {\n          type: 'boolean'\n        }\n      }\n    }\n  }\n}))\n\nexport default defineController(() => ({\n  get: async ({ params }) => {\n    const task = await findTask(params.taskId)\n\n    return task ? { status: 200, body: task } : { status: 404 }\n  }\n}))\n")))}u.isMDXComponent=!0}}]);