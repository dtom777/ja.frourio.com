"use strict";(self.webpackChunkfrourio_doc=self.webpackChunkfrourio_doc||[]).push([[6852],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return c}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=p(n),c=r,f=d["".concat(s,".").concat(c)]||d[c]||m[c]||l;return n?a.createElement(f,i(i({ref:t},u),{},{components:n})):a.createElement(f,i({ref:t},u))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8215:function(e,t,n){var a=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},9877:function(e,t,n){n.d(t,{Z:function(){return u}});var a=n(3117),r=n(7294),l=n(2389),i=n(4726),o=n(6010),s="tabItem_LplD";function p(e){var t,n,l,p=e.lazy,u=e.block,m=e.defaultValue,d=e.values,c=e.groupId,f=e.className,k=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=d?d:k.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),h=(0,i.lx)(g,(function(e,t){return e.value===t.value}));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var N=null===m?m:null!=(t=null!=m?m:null==(n=k.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(l=k[0])?void 0:l.props.value;if(null!==N&&!g.some((function(e){return e.value===N})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+N+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var b=(0,i.UB)(),v=b.tabGroupChoices,y=b.setTabGroupChoices,x=(0,r.useState)(N),T=x[0],C=x[1],w=[],O=(0,i.o5)().blockElementScrollPositionUntilNextRender;if(null!=c){var E=v[c];null!=E&&E!==T&&g.some((function(e){return e.value===E}))&&C(E)}var I=function(e){var t=e.currentTarget,n=w.indexOf(t),a=g[n].value;a!==T&&(O(t),C(a),null!=c&&y(c,a))},D=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=w.indexOf(e.currentTarget)+1;n=w[a]||w[0];break;case"ArrowLeft":var r=w.indexOf(e.currentTarget)-1;n=w[r]||w[w.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":u},f)},g.map((function(e){var t=e.value,n=e.label,l=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:function(e){return w.push(e)},onKeyDown:D,onFocus:I,onClick:I},l,{className:(0,o.Z)("tabs__item",s,null==l?void 0:l.className,{"tabs__item--active":T===t})}),null!=n?n:t)}))),p?(0,r.cloneElement)(k.filter((function(e){return e.props.value===T}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},k.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==T})}))))}function u(e){var t=(0,l.Z)();return r.createElement(p,(0,a.Z)({key:String(t)},e))}},2726:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return u},metadata:function(){return m},toc:function(){return d},default:function(){return f}});var a=n(3117),r=n(102),l=(n(7294),n(3905)),i=n(9877),o=n(8215),s=["components"],p={id:"posting-formdata",title:"Posting FormData"},u=void 0,m={unversionedId:"controller/posting-formdata",id:"controller/posting-formdata",title:"Posting FormData",description:"<Tabs",source:"@site/docs/controller/posting-formdata.mdx",sourceDirName:"controller",slug:"/controller/posting-formdata",permalink:"/docs/controller/posting-formdata",editUrl:"https://github.com/frouriojs/frourio.com/edit/master/docs/controller/posting-formdata.mdx",tags:[],version:"current",frontMatter:{id:"posting-formdata",title:"Posting FormData"},sidebar:"someSidebar",previous:{title:"POST - /tasks",permalink:"/docs/controller/post-tasks"},next:{title:"Hooks types and lifecycle",permalink:"/docs/hooks/lifecycle"}},d=[],c={toc:d};function f(e){var t=e.components,n=(0,r.Z)(e,s);return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("br",null),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="server/api/user/_userId/index.ts"',title:'"server/api/user/_userId/index.ts"'},"export type Methods = {\n  post: {\n    reqFormat: FormData // required\n    reqBody: { icon: Blob }\n    status: 204 // optional\n  }\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="server/api/user/_userId/controller.ts"',title:'"server/api/user/_userId/controller.ts"'},"import { defineController } from './$relay'\nimport { changeIcon } from '$/service/user'\n\nexport default defineController(() => ({\n  post: async ({ params, body }) => {\n    await changeIcon(params.userId, body.icon)\n\n    return { status: 204 }\n  }\n}))\n")),(0,l.kt)(i.Z,{defaultValue:"fastify",values:[{label:"fastify",value:"fastify"},{label:"express",value:"express"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"fastify",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="server/service/user.ts"',title:'"server/service/user.ts"'},"import fs from 'fs'\nimport path from 'path'\nimport { Multipart } from 'fastify-multipart'\n\nexport const changeIcon = async (id: string, iconFile: Multipart) => {\n  const iconName = `${Date.now()}${path.extname(iconFile.filename)}`\n\n  await fs.promises.writeFile(\n    path.resolve('public/icons', id, iconName),\n    await iconFile.toBuffer()\n  )\n}\n")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fastify/fastify-multipart#usage"},"fastify-multipart")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="server/service/app.ts"',title:'"server/service/app.ts"'},"import Fastify from 'fastify'\nimport server from './$server' // '$server.ts' is automatically generated by frourio\n\nconst fastify = Fastify()\n\nserver(fastify, { basePath: '/api/v1', multipart: { fileSize: 1024 ** 3 } })\nfastify.listen(3000)\n")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/mscdex/busboy#busboy-methods"},"Multipart options"))),(0,l.kt)(o.Z,{value:"express",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="server/service/user.ts"',title:'"server/service/user.ts"'},"import fs from 'fs'\nimport path from 'path'\nimport { MulterFile } from '$/$server'\n\nexport const changeIcon = async (id: string, iconFile: MulterFile) => {\n  const iconName = `${Date.now()}${path.extname(iconFile.originalname)}`\n\n  await fs.promises.copyFile(iconFile.path, path.resolve('public/icons', id, iconName))\n  await fs.promises.unlink(iconFile.path)\n}\n")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/expressjs/multer#file-information"},"MulterFile information")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Note"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"fieldname")),(0,l.kt)("td",{parentName:"tr",align:null},"Field name specified in the form"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"originalname")),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the file on the user's computer"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"encoding")),(0,l.kt)("td",{parentName:"tr",align:null},"Encoding type of the file"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"mimetype")),(0,l.kt)("td",{parentName:"tr",align:null},"Mime type of the file"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"size")),(0,l.kt)("td",{parentName:"tr",align:null},"Size of the file in bytes"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"destination")),(0,l.kt)("td",{parentName:"tr",align:null},"The folder to which the file has been saved"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"DiskStorage"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"filename")),(0,l.kt)("td",{parentName:"tr",align:null},"The name of the file within the ",(0,l.kt)("inlineCode",{parentName:"td"},"destination")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"DiskStorage"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"path")),(0,l.kt)("td",{parentName:"tr",align:null},"The full path to the uploaded file"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"DiskStorage"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"buffer")),(0,l.kt)("td",{parentName:"tr",align:null},"A ",(0,l.kt)("inlineCode",{parentName:"td"},"Buffer")," of the entire file"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"MemoryStorage"))))),(0,l.kt)("br",null),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="server/entrypoints/index.ts"',title:'"server/entrypoints/index.ts"'},"import express from 'express'\nimport server from './$server' // '$server.ts' is automatically generated by frourio\n\nconst app = express()\n\nserver(app, { basePath: '/api/v1', multer: { limits: { fileSize: 1024 ** 3 } } })\napp.listen(3000)\n")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/expressjs/multer#multeropts"},"Multer options")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"dest")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"storage")),(0,l.kt)("td",{parentName:"tr",align:null},"Where to store the files"),(0,l.kt)("td",{parentName:"tr",align:null},"path.join(__dirname, '.upload')")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"fileFilter")),(0,l.kt)("td",{parentName:"tr",align:null},"Function to control which files are accepted"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"limits")),(0,l.kt)("td",{parentName:"tr",align:null},"Limits of the uploaded data"),(0,l.kt)("td",{parentName:"tr",align:null},"{ fileSize: 1024 ** 3 }")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"preservePath")),(0,l.kt)("td",{parentName:"tr",align:null},"Keep the full path of files instead of just the base name"),(0,l.kt)("td",{parentName:"tr",align:null})))))),(0,l.kt)(i.Z,{defaultValue:"next",values:[{label:"Next.js",value:"next"},{label:"Nuxt.js",value:"nuxt"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"next",mdxType:"TabItem"},(0,l.kt)("p",null,"Use ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/aspida/aspida"},"aspida")," for the frontend HTTP client.",(0,l.kt)("br",{parentName:"p"}),"\n","(Frourio and aspida are maintained by the same developer)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="components/UserBanner.tsx"',title:'"components/UserBanner.tsx"'},"import { useCallback, ChangeEvent } from 'react'\nimport { apiClient } from '~/utils/apiClient'\n\nconst UserBanner = () => {\n  const editIcon = useCallback(\n    async (e: ChangeEvent<HTMLInputElement>) => {\n      if (!e.target.files?.length) return\n\n      await apiClient.user._userId(1).$post({\n        body: { icon: e.target.files[0] }\n      })\n    },\n    []\n  )\n\n  return <input type=\"file\" accept=\"image/*\" onChange={editIcon} />\n}\n\nexport default UserBanner\n"))),(0,l.kt)(o.Z,{value:"nuxt",mdxType:"TabItem"},(0,l.kt)("p",null,"Use ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/aspida/aspida"},"aspida")," for the frontend HTTP client.",(0,l.kt)("br",{parentName:"p"}),"\n","(Frourio and aspida are maintained by the same developer)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="components/UserBanner.vue"',title:'"components/UserBanner.vue"'},"import Vue from 'vue'\n\nexport default Vue.extend({\n  methods: {\n    async editIcon(e: { target: HTMLInputElement }) {\n      if (!e.target?.files?.length) return\n\n      await this.$api.user._userId(1).$post({\n        body: { icon: e.target.files[0] }\n      })\n    },\n  }\n})\n")))))}f.isMDXComponent=!0}}]);