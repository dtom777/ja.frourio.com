"use strict";(self.webpackChunkfrourio_doc=self.webpackChunkfrourio_doc||[]).push([[2345],{3905:function(e,t,n){n.d(t,{Zo:function(){return o},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},o=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,o=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,g=d["".concat(u,".").concat(m)]||d[m]||c[m]||i;return n?a.createElement(g,p(p({ref:t},o),{},{components:n})):a.createElement(g,p({ref:t},o))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,p=new Array(i);p[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:r,p[1]=l;for(var s=2;s<i;s++)p[s]=n[s];return a.createElement.apply(null,p)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3815:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return s},metadata:function(){return o},toc:function(){return c},default:function(){return m}});var a=n(3117),r=n(102),i=(n(7294),n(3905)),p=n(8930),l=["components"],u={id:"with-nuxtjs",title:"Pathpida with Nuxt.js"},s=void 0,o={unversionedId:"guide/pathpida/with-nuxtjs",id:"guide/pathpida/with-nuxtjs",title:"Pathpida with Nuxt.js",description:"TypeScript friendly internal link client for Nuxt.js.",source:"@site/docs/guide/pathpida/with-nuxtjs.mdx",sourceDirName:"guide/pathpida",slug:"/guide/pathpida/with-nuxtjs",permalink:"/docs/guide/pathpida/with-nuxtjs",editUrl:"https://github.com/frouriojs/frourio.com/edit/master/docs/guide/pathpida/with-nuxtjs.mdx",tags:[],version:"current",frontMatter:{id:"with-nuxtjs",title:"Pathpida with Nuxt.js"},sidebar:"docs",previous:{title:"Pathpida with Next.js",permalink:"/docs/guide/pathpida/with-nextjs"},next:{title:"Continuous Integration",permalink:"/docs/guide/deployments/ci"}},c=[{value:"Features",id:"features",children:[],level:2},{value:"Install",id:"install",children:[],level:2},{value:"Setup",id:"setup",children:[],level:2},{value:"Usage",id:"usage",children:[],level:2},{value:"Define query",id:"define-query",children:[],level:2},{value:"Generate static files path",id:"static-path",children:[],level:2}],d={toc:c};function m(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("img",{src:"https://aspida.github.io/pathpida/logos/png/logo.png",alt:"pathpida",title:"pathpida"}),(0,i.kt)("p",{align:"center"},"TypeScript friendly internal link client for Nuxt.js."),(0,i.kt)("div",{align:"center"},(0,i.kt)(p.Z,{href:"https://github.com/aspida/pathpida","data-icon":"octicon-star","data-size":"large","data-show-count":!0,"aria-label":"Star aspida/pathpida on GitHub",mdxType:"GitHubButton"},"Star")),(0,i.kt)("h2",{id:"features"},"Features"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Type safety"),". Automatically generate type definition files for manipulating internal links in Nuxt.js."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Zero configration"),". No configuration required, can be used immediately after installation."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Zero runtime"),". Lightweight because runtime code is not included in the bundle.")),(0,i.kt)("h2",{id:"install"},"Install"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Using ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/"},"npm"),":"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"$ npm install pathpida npm-run-all --save-dev\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Using ",(0,i.kt)("a",{parentName:"p",href:"https://yarnpkg.com/"},"Yarn"),":"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"$ yarn add pathpida npm-run-all --dev\n")))),(0,i.kt)("h2",{id:"setup"},"Setup"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"package.json")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "scripts": {\n    "dev:pathpida": "pathpida --watch",\n    "build:client": "pathpida && aspida && nuxt-ts",\n    "build:types": "pathpida && aspida && npm run build:frourio --prefix server"\n  }\n}\n')),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"nuxt.config.js")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"nuxt.config.ts")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"{\n  plugins: ['~/plugins/$path'],\n  srcDir: 'client', // optional\n  router: {\n    trailingSlash: true // optional\n  }\n}\n")),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"pages/index.vue\npages/post/create.vue\npages/post/_pid.tsx\n\nplugins/$path.ts // Generated automatically by pathpida\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"pages/index.vue")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-vue"},'<template>\n  <div>\n    <nuxt-link :to="$pagesPath.post._pid(1).$url()" />\n    <div @click="onclick" />\n  </div>\n</template>\n\n<script lang="ts">\nimport Vue from \'vue\'\n\nexport default Vue.extend({\n  methods: {\n    onclick() {\n      this.$router.push(this.$pagesPath.post._pid(1).$url())\n    },\n  },\n})\n<\/script>\n')),(0,i.kt)("h2",{id:"define-query"},"Define query"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"pages/post/create.vue")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-vue"},"<script lang=\"ts\">\nimport Vue from 'vue'\n\nexport type Query = {\n  userId: number\n  name?: string\n}\n\nexport default Vue.extend({})\n<\/script>\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"pages/post/_pid.vue")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-vue"},"<script lang=\"ts\">\nimport Vue from 'vue'\n\nexport type OptionalQuery = {\n  limit: number\n  label?: string\n}\n\nexport default Vue.extend({})\n<\/script>\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"pages/index.vue")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-vue"},'<template>\n  <div>\n    <nuxt-link :to="$pagesPath.post.create.$url({ query: { userId: 1 } })" />\n    <div @click="onclick" />\n  </div>\n</template>\n\n<script lang="ts">\nimport Vue from \'vue\'\n\nexport default Vue.extend({\n  methods: {\n    onclick() {\n      this.$router.push(this.$pagesPath.post._pid(1).$url())\n      this.$router.push(this.$pagesPath.post._pid(1).$url({ query: { limit: 10 }, hash: \'sample\' }))\n    },\n  },\n})\n<\/script>\n')),(0,i.kt)("p",null,"\u26a0\ufe0f Query/OptionalQuery type must not contain any reference types."),(0,i.kt)("p",null,"This is because due to typescript restrictions, types exported from ",(0,i.kt)("inlineCode",{parentName:"p"},".vue")," files cannot be imported in ",(0,i.kt)("inlineCode",{parentName:"p"},"plugins/$path.ts"),".",(0,i.kt)("br",{parentName:"p"}),"\n","If you want to import types from other files, please use ",(0,i.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-9.html#import-types"},"import types")," with absolute paths."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"types/users.ts")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export type UserId = number\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"pages/post/create.vue")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-vue"},"<script lang=\"ts\">\nimport Vue from 'vue'\n\nexport type Query = {\n  userId: import('~/types/users').UserId\n  name?: string\n}\n\nexport default Vue.extend({})\n<\/script>\n")),(0,i.kt)("h2",{id:"static-path"},"Generate static files path"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"package.json")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "scripts": {\n    "dev:pathpida": "pathpida --enableStatic --watch",\n    "build:client": "pathpida --enableStatic && aspida && nuxt-ts",\n    "build:types": "pathpida --enableStatic && aspida && npm run build:frourio --prefix server"\n  }\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"pages/index.vue\npages/post/create.vue\npages/post/_pid.vue\n\nstatic/aa.json\nstatic/bb/cc.png\n\nplugins/$path.ts // Generated automatically by pathpida\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"pages/index.vue")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-vue"},'<template>\n  <div>\n    <nuxt-link :to="$pagesPath.post.create.$url({ query: { userId: 1 } })" />\n    <img :src="$staticPath.bb.cc_png" />\n  </div>\n</template>\n\n<script lang="ts">\nimport Vue from \'vue\'\n\nexport default Vue.extend({})\n<\/script>\n')))}m.isMDXComponent=!0}}]);