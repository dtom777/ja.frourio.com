"use strict";(self.webpackChunkfrourio_doc=self.webpackChunkfrourio_doc||[]).push([[2345],{3905:function(e,t,n){n.d(t,{Zo:function(){return o},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},p=Object.keys(e);for(a=0;a<p.length;a++)n=p[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(a=0;a<p.length;a++)n=p[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},o=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,p=e.originalType,u=e.parentName,o=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,g=d["".concat(u,".").concat(m)]||d[m]||c[m]||p;return n?a.createElement(g,i(i({ref:t},o),{},{components:n})):a.createElement(g,i({ref:t},o))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var p=n.length,i=new Array(p);i[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<p;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3815:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return g},frontMatter:function(){return u},metadata:function(){return o},toc:function(){return d}});var a=n(7462),r=n(3366),p=(n(7294),n(3905)),i=n(2719),l=["components"],u={id:"with-nuxtjs",title:"Pathpida \u3068 Nuxt.js"},s=void 0,o={unversionedId:"guide/pathpida/with-nuxtjs",id:"guide/pathpida/with-nuxtjs",title:"Pathpida \u3068 Nuxt.js",description:"TypeScript friendly internal link client for Nuxt.js.",source:"@site/docs/guide/pathpida/with-nuxtjs.mdx",sourceDirName:"guide/pathpida",slug:"/guide/pathpida/with-nuxtjs",permalink:"/docs/guide/pathpida/with-nuxtjs",draft:!1,editUrl:"https://github.com/frouriojs/ja.frourio.com/edit/master/docs/guide/pathpida/with-nuxtjs.mdx",tags:[],version:"current",frontMatter:{id:"with-nuxtjs",title:"Pathpida \u3068 Nuxt.js"},sidebar:"docs",previous:{title:"Pathpida \u3068 Next.js",permalink:"/docs/guide/pathpida/with-nextjs"},next:{title:"\u7d99\u7d9a\u7684\u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3 (CI)",permalink:"/docs/guide/deployments/ci"}},c={},d=[{value:"\u7279\u5fb4",id:"features",level:2},{value:"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb",id:"install",level:2},{value:"\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7",id:"setup",level:2},{value:"\u4f7f\u3044\u65b9",id:"usage",level:2},{value:"\u30af\u30a8\u30ea\u306e\u5b9a\u7fa9",id:"define-query",level:2},{value:"Generate static files path",id:"static-path",level:2}],m={toc:d};function g(e){var t=e.components,n=(0,r.Z)(e,l);return(0,p.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("br",null),(0,p.kt)("br",null),(0,p.kt)("img",{src:"https://aspida.github.io/pathpida/logos/png/logo.png",alt:"pathpida",title:"pathpida"}),(0,p.kt)("p",{align:"center"},"TypeScript friendly internal link client for Nuxt.js."),(0,p.kt)("div",{align:"center"},(0,p.kt)(i.Z,{href:"https://github.com/aspida/pathpida","data-icon":"octicon-star","data-size":"large","data-show-count":!0,"aria-label":"Star aspida/pathpida on GitHub",mdxType:"GitHubButton"},"Star")),(0,p.kt)("h2",{id:"features"},"\u7279\u5fb4"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u578b\u5b89\u5168"),"\u3002Next.js \u3067\u5185\u90e8\u30ea\u30f3\u30af\u3092\u53d6\u308a\u6271\u3046\u305f\u3081\u306e\u578b\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u3092\u81ea\u52d5\u751f\u6210\u3057\u307e\u3059\u3002"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8a2d\u5b9a\u4e0d\u8981"),"\u3002\u8a2d\u5b9a\u3092\u5fc5\u8981\u3068\u305b\u305a\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5f8c\u3059\u3050\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u5b9f\u884c\u6642\u8ca0\u8377\u7121\u3057"),"\u3002\u30e9\u30f3\u30bf\u30a4\u30e0\u30b3\u30fc\u30c9\u304c\u30d0\u30f3\u30c9\u30eb\u306b\u542b\u307e\u308c\u306a\u3044\u306e\u3067\u8efd\u91cf\u3067\u3059\u3002")),(0,p.kt)("h2",{id:"install"},"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"https://www.npmjs.com/"},"npm")," \u3092\u4f7f\u7528:"),(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-sh"},"$ npm install pathpida npm-run-all --save-dev\n"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"https://yarnpkg.com/"},"Yarn")," \u3092\u4f7f\u7528:"),(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-sh"},"$ yarn add pathpida npm-run-all --dev\n")))),(0,p.kt)("h2",{id:"setup"},"\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"package.json")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "scripts": {\n    "dev:pathpida": "pathpida --watch",\n    "build:client": "pathpida && aspida && nuxt-ts",\n    "build:types": "pathpida && aspida && npm run build:frourio --prefix server"\n  }\n}\n')),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"nuxt.config.js")," \u307e\u305f\u306f ",(0,p.kt)("inlineCode",{parentName:"p"},"nuxt.config.ts")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-js"},"{\n  plugins: ['~/plugins/$path'],\n  srcDir: 'client', // optional\n  router: {\n    trailingSlash: true // optional\n  }\n}\n")),(0,p.kt)("h2",{id:"usage"},"\u4f7f\u3044\u65b9"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"pages/index.vue\npages/post/create.vue\npages/post/_pid.tsx\n\nplugins/$path.ts // Generated automatically by pathpida\n")),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"pages/index.vue")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-vue"},'<template>\n  <div>\n    <nuxt-link :to="$pagesPath.post._pid(1).$url()" />\n    <div @click="onclick" />\n  </div>\n</template>\n\n<script lang="ts">\nimport Vue from \'vue\';\n\nexport default Vue.extend({\n  methods: {\n    onclick() {\n      this.$router.push(this.$pagesPath.post._pid(1).$url());\n    },\n  },\n});\n<\/script>\n')),(0,p.kt)("h2",{id:"define-query"},"\u30af\u30a8\u30ea\u306e\u5b9a\u7fa9"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"pages/post/create.vue")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-vue"},"<script lang=\"ts\">\nimport Vue from 'vue';\n\nexport type Query = {\n  userId: number;\n  name?: string;\n};\n\nexport default Vue.extend({});\n<\/script>\n")),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"pages/post/_pid.vue")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-vue"},"<script lang=\"ts\">\nimport Vue from 'vue';\n\nexport type OptionalQuery = {\n  limit: number;\n  label?: string;\n};\n\nexport default Vue.extend({});\n<\/script>\n")),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"pages/index.vue")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-vue"},'<template>\n  <div>\n    <nuxt-link :to="$pagesPath.post.create.$url({ query: { userId: 1 } })" />\n    <div @click="onclick" />\n  </div>\n</template>\n\n<script lang="ts">\nimport Vue from \'vue\';\n\nexport default Vue.extend({\n  methods: {\n    onclick() {\n      this.$router.push(this.$pagesPath.post._pid(1).$url());\n      this.$router.push(\n        this.$pagesPath.post._pid(1).$url({ query: { limit: 10 }, hash: \'sample\' })\n      );\n    },\n  },\n});\n<\/script>\n')),(0,p.kt)("p",null,"\u26a0\ufe0f Query/OptionalQuery \u578b\u306f\u3044\u304b\u306a\u308b\u53c2\u7167\u578b\u3082\u542b\u3093\u3067\u306f\u3044\u3051\u307e\u305b\u3093\u3002"),(0,p.kt)("p",null,"TypeScript \u306e\u5236\u9650\u306b\u3088\u308a\u3001",(0,p.kt)("inlineCode",{parentName:"p"},".vue")," \u30d5\u30a1\u30a4\u30eb\u304b\u3089 export \u3055\u308c\u305f\u578b\u3092 ",(0,p.kt)("inlineCode",{parentName:"p"},"plugins/$path.ts")," \u3067 import \u3067\u304d\u306a\u3044\u3053\u3068\u304c\u7406\u7531\u3067\u3059\u3002",(0,p.kt)("br",{parentName:"p"}),"\n","\u4ed6\u306e\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u578b\u3092 import \u3057\u305f\u3044\u5834\u5408\u306f\u3001",(0,p.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-9.html#import-types"},"import types")," \u3092\u7d76\u5bfe\u30d1\u30b9\u3067\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"types/users.ts")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-ts"},"export type UserId = number;\n")),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"pages/post/create.vue")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-vue"},"<script lang=\"ts\">\nimport Vue from 'vue';\n\nexport type Query = {\n  userId: import('~/types/users').UserId;\n  name?: string;\n};\n\nexport default Vue.extend({});\n<\/script>\n")),(0,p.kt)("h2",{id:"static-path"},"Generate static files path"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"package.json")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "scripts": {\n    "dev:pathpida": "pathpida --enableStatic --watch",\n    "build:client": "pathpida --enableStatic && aspida && nuxt-ts",\n    "build:types": "pathpida --enableStatic && aspida && npm run build:frourio --prefix server"\n  }\n}\n')),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"pages/index.vue\npages/post/create.vue\npages/post/_pid.vue\n\nstatic/aa.json\nstatic/bb/cc.png\n\nplugins/$path.ts // Generated automatically by pathpida\n")),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"pages/index.vue")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-vue"},'<template>\n  <div>\n    <nuxt-link :to="$pagesPath.post.create.$url({ query: { userId: 1 } })" />\n    <img :src="$staticPath.bb.cc_png" />\n  </div>\n</template>\n\n<script lang="ts">\nimport Vue from \'vue\';\n\nexport default Vue.extend({});\n<\/script>\n')))}g.isMDXComponent=!0}}]);