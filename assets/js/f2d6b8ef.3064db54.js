"use strict";(self.webpackChunkfrourio_doc=self.webpackChunkfrourio_doc||[]).push([[4482],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(r),f=a,m=d["".concat(s,".").concat(f)]||d[f]||u[f]||o;return r?n.createElement(m,i(i({ref:t},c),{},{components:r})):n.createElement(m,i({ref:t},c))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3995:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return d}});var n=r(3117),a=r(102),o=(r(7294),r(3905)),i=["components"],l={id:"preparation",title:"Prepare Client and Server"},s=void 0,p={unversionedId:"tutorials/preparation",id:"tutorials/preparation",title:"Prepare Client and Server",description:"1. Create React App",source:"@site/docs/tutorials/preparation.mdx",sourceDirName:"tutorials",slug:"/tutorials/preparation",permalink:"/docs/tutorials/preparation",editUrl:"https://github.com/frouriojs/frourio.com/edit/master/docs/tutorials/preparation.mdx",tags:[],version:"current",frontMatter:{id:"preparation",title:"Prepare Client and Server"},sidebar:"tutorial",previous:{title:"Why Frourio?",permalink:"/docs/tutorials/why-frourio"},next:{title:"Introduce Aspida",permalink:"/docs/tutorials/aspida"}},c=[{value:"1. Create React App",id:"create-react-app",children:[],level:2},{value:"2. Create Server Directory",id:"create-server-directory",children:[],level:2},{value:"3. Create Fastify Server",id:"create-fastify-server",children:[],level:2}],u={toc:c};function d(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"create-react-app"},"1. Create React App"),(0,o.kt)("p",null,"As mentioned before, use create-react-app for the client."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh",metastring:"title=Terminal",title:"Terminal"},"yarn create react-app frourio-tutorial --template typescript\ncd frourio-tutorial\n")),(0,o.kt)("h2",{id:"create-server-directory"},"2. Create Server Directory"),(0,o.kt)("p",null,"Set up the server project so that it is contained within the frourio-tutorial directory."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh",metastring:"title=Terminal",title:"Terminal"},"mkdir server\ncd server\nyarn init -y\nyarn add fastify @fastify/cors\nyarn add -D typescript ts-node @types/node\n")),(0,o.kt)("h2",{id:"create-fastify-server"},"3. Create Fastify Server"),(0,o.kt)("p",null,"Create and edit ",(0,o.kt)("inlineCode",{parentName:"p"},"server/index.ts")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"server/tsconfig.json")," as follows."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=server/index.ts",title:"server/index.ts"},"import Fastify from 'fastify';\nimport FastifyCors from '@fastify/cors';\n\nconst fastify = Fastify();\n\nfastify.register(FastifyCors, {});\n\nfastify.get('/', (req, reply) => {\n  reply.send({ hello: 'world' });\n});\n\nfastify.get('/hi', (req, reply) => {\n  reply.send({ hello: 'how are you?' });\n});\n\nfastify.listen({ port: 8888, host: '0.0.0.0' });\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:"title=server/tsconfig.json",title:"server/tsconfig.json"},'{\n  "extends": "../tsconfig.json",\n  "compilerOptions": {\n    "module": "commonjs"\n  },\n  "exclude": ["node_modules"],\n  "include": ["**/*.ts"]\n}\n')),(0,o.kt)("p",null,"In another terminal session,"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh",metastring:"title=Terminal",title:"Terminal"},"yarn ts-node index.ts\n")),(0,o.kt)("p",null,"Here we have two endpoints, ",(0,o.kt)("inlineCode",{parentName:"p"},"/")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"/hi"),"."),(0,o.kt)("p",null,"Ensure that you can see the json correctly in both the Terminal and the Browser Console."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh",metastring:"title=Terminal",title:"Terminal"},"curl http://localhost:8888\ncurl http://localhost:8888/hi\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"title='Browser Console'",title:"'Browser","Console'":!0},"const response = await fetch('http://localhost:8888');\nawait response.json();\n")),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Preparation is now all done."),(0,o.kt)("p",null,"Now it's time to send HTTP requests to the server using aspida!"))}d.isMDXComponent=!0}}]);